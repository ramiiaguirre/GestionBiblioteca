// <auto-generated />
using System;
using GestionBiblioteca.Service.ConfigEF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GestionBiblioteca.Service.Migrations
{
    [DbContext(typeof(BibliotecaContext))]
    partial class BibliotecaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GestionBiblioteca.BusinessLogic.Entidades.Autor", b =>
                {
                    b.Property<long>("IdAutor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdAutor"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nacionalidad")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdAutor");

                    b.ToTable("Autor", (string)null);
                });

            modelBuilder.Entity("GestionBiblioteca.BusinessLogic.Entidades.Categoria", b =>
                {
                    b.Property<long>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdCategoria"));

                    b.Property<string>("DescripcionCategoria")
                        .HasColumnType("text");

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categoria", (string)null);
                });

            modelBuilder.Entity("GestionBiblioteca.BusinessLogic.Entidades.Idioma", b =>
                {
                    b.Property<long>("IdIdioma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdIdioma"));

                    b.Property<string>("NombreIdioma")
                        .HasColumnType("text");

                    b.HasKey("IdIdioma");

                    b.ToTable("Idioma", (string)null);
                });

            modelBuilder.Entity("GestionBiblioteca.BusinessLogic.Entidades.Libro", b =>
                {
                    b.Property<long>("IdLibro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdLibro"));

                    b.Property<DateTime?>("Año")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<long>("IdIdioma_fk")
                        .HasColumnType("bigint");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Valoracion")
                        .HasColumnType("integer");

                    b.HasKey("IdLibro");

                    b.HasIndex("IdIdioma_fk");

                    b.ToTable("Libro", (string)null);
                });

            modelBuilder.Entity("GestionBiblioteca.BusinessLogic.Entidades.LibroAutor", b =>
                {
                    b.Property<long>("IdLibroAutor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdLibroAutor"));

                    b.Property<long>("IdAutor_fk")
                        .HasColumnType("bigint");

                    b.Property<long>("IdLibro_fk")
                        .HasColumnType("bigint");

                    b.HasKey("IdLibroAutor");

                    b.HasIndex("IdAutor_fk");

                    b.HasIndex("IdLibro_fk");

                    b.ToTable("LibroAutor");
                });

            modelBuilder.Entity("GestionBiblioteca.BusinessLogic.Entidades.LibroCategoria", b =>
                {
                    b.Property<long>("IdLibroCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdLibroCategoria"));

                    b.Property<long>("IdCategoria_fk")
                        .HasColumnType("bigint");

                    b.Property<long>("IdLibro_fk")
                        .HasColumnType("bigint");

                    b.HasKey("IdLibroCategoria");

                    b.HasIndex("IdCategoria_fk");

                    b.HasIndex("IdLibro_fk");

                    b.ToTable("LibroCategoria");
                });

            modelBuilder.Entity("GestionBiblioteca.BusinessLogic.Entidades.Libro", b =>
                {
                    b.HasOne("GestionBiblioteca.BusinessLogic.Entidades.Idioma", null)
                        .WithMany("Libros")
                        .HasForeignKey("IdIdioma_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestionBiblioteca.BusinessLogic.Entidades.LibroAutor", b =>
                {
                    b.HasOne("GestionBiblioteca.BusinessLogic.Entidades.Autor", "Autor")
                        .WithMany()
                        .HasForeignKey("IdAutor_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionBiblioteca.BusinessLogic.Entidades.Libro", "Libro")
                        .WithMany()
                        .HasForeignKey("IdLibro_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Libro");
                });

            modelBuilder.Entity("GestionBiblioteca.BusinessLogic.Entidades.LibroCategoria", b =>
                {
                    b.HasOne("GestionBiblioteca.BusinessLogic.Entidades.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("IdCategoria_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionBiblioteca.BusinessLogic.Entidades.Libro", "Libro")
                        .WithMany()
                        .HasForeignKey("IdLibro_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Libro");
                });

            modelBuilder.Entity("GestionBiblioteca.BusinessLogic.Entidades.Idioma", b =>
                {
                    b.Navigation("Libros");
                });
#pragma warning restore 612, 618
        }
    }
}
